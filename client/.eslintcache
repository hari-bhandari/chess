[{"/home/hari/WebstormProjects/chess/client/src/index.tsx":"1","/home/hari/WebstormProjects/chess/client/src/reportWebVitals.ts":"2","/home/hari/WebstormProjects/chess/client/src/App.tsx":"3","/home/hari/WebstormProjects/chess/client/src/styles/theme.ts":"4","/home/hari/WebstormProjects/chess/client/src/styles/GlobalStyle.ts":"5","/home/hari/WebstormProjects/chess/client/src/Piece.tsx":"6","/home/hari/WebstormProjects/chess/client/src/UI/Board/Board.tsx":"7","/home/hari/WebstormProjects/chess/client/src/UI/Board/RestartGame.tsx":"8","/home/hari/WebstormProjects/chess/client/src/UI/Board/BoardSquare.tsx":"9","/home/hari/WebstormProjects/chess/client/src/UI/Board/Square.tsx":"10","/home/hari/WebstormProjects/chess/client/src/UI/Board/Promote.tsx":"11","/home/hari/WebstormProjects/chess/client/src/game.js":"12","/home/hari/WebstormProjects/chess/client/src/UI/Auth/Login/Login.tsx":"13","/home/hari/WebstormProjects/chess/client/src/UI/Auth/Input.tsx":"14","/home/hari/WebstormProjects/chess/client/src/UI/Auth/Login/Login.styles.tsx":"15","/home/hari/WebstormProjects/chess/client/src/UI/Auth/Login/LoginWrapper.tsx":"16","/home/hari/WebstormProjects/chess/client/src/Components/Styles/Flex.tsx":"17","/home/hari/WebstormProjects/chess/client/src/Components/Styles/ColorVarients.tsx":"18"},{"size":675,"mtime":1612463380204,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":1612132907753,"results":"21","hashOfConfig":"20"},{"size":2299,"mtime":1612810340980,"results":"22","hashOfConfig":"20"},{"size":3414,"mtime":1612816644831,"results":"23","hashOfConfig":"20"},{"size":172,"mtime":1612271853422,"results":"24","hashOfConfig":"20"},{"size":1573,"mtime":1612464398783,"results":"25","hashOfConfig":"20"},{"size":1980,"mtime":1612804155417,"results":"26","hashOfConfig":"20"},{"size":1987,"mtime":1612804142161,"results":"27","hashOfConfig":"20"},{"size":1758,"mtime":1612804155401,"results":"28","hashOfConfig":"20"},{"size":514,"mtime":1612739654242,"results":"29","hashOfConfig":"20"},{"size":1169,"mtime":1612804155409,"results":"30","hashOfConfig":"20"},{"size":2142,"mtime":1612804147773,"results":"31","hashOfConfig":"20"},{"size":2396,"mtime":1612827442455,"results":"32","hashOfConfig":"20"},{"size":2717,"mtime":1612809734871,"results":"33","hashOfConfig":"20"},{"size":2984,"mtime":1612822242555,"results":"34","hashOfConfig":"20"},{"size":830,"mtime":1612810355596,"results":"35","hashOfConfig":"20"},{"size":912,"mtime":1612815564459,"results":"36","hashOfConfig":"20"},{"size":704,"mtime":1612808705499,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1sgv1ii",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/home/hari/WebstormProjects/chess/client/src/index.tsx",[],["81","82"],"/home/hari/WebstormProjects/chess/client/src/reportWebVitals.ts",[],"/home/hari/WebstormProjects/chess/client/src/App.tsx",[],"/home/hari/WebstormProjects/chess/client/src/styles/theme.ts",["83","84","85"],"import { DefaultTheme, CSSProp } from 'styled-components';\nimport colorVariants from \"../Components/Styles/ColorVarients\";\n// and extend them!\ndeclare module 'styled-components' {\n    export interface DefaultTheme {\n        white:string,\n        black:string\n        variants: {\n            primary: CSSProp;\n            secondary: CSSProp;\n            danger: CSSProp;\n            success: CSSProp;\n        };\n        colors: {\n            primary: string;\n            secondary: string;\n            light: string;\n            accent: string;\n            offwhite: string;\n            white: string;\n            black: string;\n            gray: string;\n            green: string;\n            greenlight: string;\n            red: string;\n            redlight: string;\n            cardBg: string;\n        };\n        font: {\n            primary: string;\n            primaryBold: string;\n            primaryItalic: string;\n            primaryMedium: string;\n            primaryLight: string;\n        };\n        spacings: {\n            top: number;\n            bottom: number;\n            left: number;\n            right: number;\n            my: string;\n            mx: string;\n        };\n        space: {\n            none: number;\n            small: number;\n            medium: number;\n            large: number;\n            xlarge: number;\n            huge: number;\n        };\n        border: string;\n        media: {\n            mobileS: string;\n            mobile: string;\n            tablet: string;\n            minTablet: string;\n            desktop: string;\n            desktopL: string;\n        };\n\n    }\n}\n\nconst colors = {\n    primary: '#5f71f3',\n    secondary: '#8B9AF4',\n    light: '#A5B1FC',\n    accent: '#E5E9FF',\n    offwhite: '#EAEEFF',\n    white: '#FBFBFF',\n    black: '#3D3C47',\n    gray: '#A5ADC6',\n    green: '#25B93E',\n    greenlight: '#CEFDD7',\n    red: '#FF5555',\n    redlight: '#FFDADA',\n    cardBg: '#F7F8FF'\n};\n\nconst size = {\n    mobileS: '320px',\n    mobile: '480px',\n    tablet: '768px',\n    desktop: '1024px',\n    desktopL: '1440px'\n};\ninterface chessColour{\n    white:string,\n    black:string\n}\nconst GrayBoard:chessColour={\n    white:'#D9D9D9',\n    black:'#929292'\n}\nconst BrownBoard:chessColour={\n    white:'#EBECD0',\n    black:'#B68860'\n}\nconst GreenBoard:chessColour={\n    white:'#EBECD0',\n    black:'#779556'\n}\nconst WoodBoard:chessColour={\n    white:'#BA9C78',\n    black:'#725238'\n}\n\n\nconst theme: DefaultTheme = {\n    variants: {\n        ...colorVariants\n    },\n    font: {\n        primary: 'Product Sans Regular',\n        primaryBold: 'Product Sans Bold',\n        primaryItalic: 'Product Sans Italic',\n        primaryMedium: 'Product Sans Medium Regular',\n        primaryLight: 'Product Sans Light Regular'\n    },\n    colors,\n    spacings: {\n        top: 40,\n        bottom: 40,\n        left: 25,\n        right: 25,\n        my: '20px',\n        mx: '20px'\n    },\n    space: {\n        none: 0,\n        small: 5,\n        medium: 10,\n        large: 15,\n        xlarge: 30,\n        huge: 40\n    },\n    border: `2px solid ${colors.offwhite}`,\n    media: {\n        mobileS: `max-width: ${size.mobileS}`,\n        mobile: `max-width: ${size.mobile}`,\n        tablet: `max-width: ${size.tablet}`,\n        minTablet: `min-width: ${size.tablet}`,\n        desktop: `max-width: ${size.desktop}`,\n        desktopL: `max-width: ${size.desktopL}`\n    },\n    ...WoodBoard\n};\n\nexport default theme;","/home/hari/WebstormProjects/chess/client/src/styles/GlobalStyle.ts",[],"/home/hari/WebstormProjects/chess/client/src/Piece.tsx",[],"/home/hari/WebstormProjects/chess/client/src/UI/Board/Board.tsx",["86"],"import React, {useEffect} from 'react';\nimport styled from \"styled-components\";\nimport BoardSquare from \"./BoardSquare\";\nimport {getPossibleMovesForASquare} from \"../../game\";\ninterface propsInterface {\n    board:[]|null\n}\nconst BoardContainer=styled.div`\n    width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n`\nconst Square=styled.div`\n    width: 12.5%;\n    height: 12.5%;\n`\n\nconst Board:React.FC<propsInterface> = ({board}) => {\n    const getPossibleMoves=(getPosition:string)=>{\n        const possibleMoves=getPossibleMovesForASquare(getPosition)\n        if(possibleMoves.length>0){\n            ChangeStyles(getPossibleMovesForASquare(getPosition))\n\n        }\n\n    }\n    //loop over and change colour of the squares\n    const ChangeStyles=(list:[]|undefined)=>{\n        console.log(list)\n        if(list!==null||list!==undefined){\n            //change the bg of the squares\n            list?.forEach(value => {\n                // @ts-ignore\n                console.log(value)\n                // @ts-ignore\n                document.getElementById(value).style.backgroundColor=\"red\"\n            })\n        }\n    }\n    function getXYPosition(i:number) {\n        const x = i% 8\n        const y = Math.abs(Math.floor(i / 8) - 7)\n        return { x, y }\n    }\n\n    function isBlack(i:number) {\n        const { x, y } = getXYPosition(i)\n        return (x + y) % 2 === 1\n    }\n    function getPosition(i:number) {\n        const { x, y } = getXYPosition(i)\n        const letter = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'][\n            x\n            ]\n        return `${letter}${y + 1}`\n    }\n\n    return (\n        <BoardContainer>\n            {board?.flat().map((piece,i:number)=><Square key={i}>\n                <BoardSquare\n                piece={piece}\n                black={isBlack(i)}\n                getPosition={getPosition(i)}\n                getPossibleMoves={getPossibleMoves}\n            /></Square>)}\n        </BoardContainer>\n    );\n};\n\nexport default Board;","/home/hari/WebstormProjects/chess/client/src/UI/Board/RestartGame.tsx",["87","88"],"import React from 'react';\nimport styled from \"styled-components\";\nimport White from '../../assets/wK.svg'\nimport Black from '../../assets/bK.svg'\n\nconst RestartContainer = styled.div`\n  width: 100%;\n  display: flex;\n\n  justify-items: center;\n  justify-content: center;\n  flex-direction: column;\n  h2 {\n    display: flex;\n    justify-items: center;\n    justify-content: center;\n    margin: 20px 40px;\n    color: white;\n\n    img {\n      width: 50px;\n    }\n  }\n  \n\n`\nconst Button = styled.button`\n  position: relative;\n  margin: 10px 50px;\n  display: inline-block;\n  cursor: pointer;\n  outline: none;\n  border: 0;\n  vertical-align: middle;\n  text-decoration: none;\n  font-size: inherit;\n  font-family: inherit;\n  font-weight: 600;\n  color: #f5f5f5;\n  text-transform: uppercase;\n  padding: 1.25em 2em;\n  background: #39291C;\n  border: 2px solid #b18597;\n  border-radius: 0.75em;\n  transform-style: preserve-3d;\n  transition: transform 150ms cubic-bezier(0, 0, 0.58, 1), background 150ms cubic-bezier(0, 0, 0.58, 1);\n\n  &:before {\n    position: absolute;\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: #a16b41;\n    border-radius: inherit;\n    box-shadow: 0 0 0 2px #b18597, 0 0.625em 0 0 #ffe3e2;\n    transform: translate3d(0, 0.75em, -1em);\n    transition: transform 150ms cubic-bezier(0, 0, 0.58, 1), box-shadow 150ms cubic-bezier(0, 0, 0.58, 1);\n\n    &:hover {\n      background: #ffe9e9;\n      transform: translate(0, 0.25em);\n    }\n  }\n\n  &:hover {\n    background: #5C4D3C;\n    transform: translate(0, 0.25em);\n  }\n\n`\nconst RestartGame:React.FC<{result:string | null | undefined,resetGame:()=>void}> = ({result,resetGame}) => {\n    return (\n        <RestartContainer>\n            <h2>{result}</h2>\n            <Button onClick={resetGame}>Play Again</Button>\n            <Button>Restart game</Button>\n            <Button>see the end game</Button>\n        </RestartContainer>\n    );\n};\n\nexport default RestartGame;","/home/hari/WebstormProjects/chess/client/src/UI/Board/BoardSquare.tsx",["89","90","91"],"import React, {useEffect, useState} from 'react';\nimport Square from \"./Square\";\nimport Piece from \"../../Piece\";\nimport styled from \"styled-components\";\nimport {useDrop} from \"react-dnd\";\nimport {handleMove} from '../../game'\nimport {gameSubject,getPossibleMovesForASquare} from \"../../game\";\nimport Promote from \"./Promote\";\ninterface props{\n    piece:any;\n    black:boolean,\n    getPosition:string,\n    getPossibleMoves:(getPosition:string)=>void\n}\nconst SquareContainer=styled.div`\n  width: 100%;\n  height: 100%;\n`\nconst BoardSquare:React.FC<props> = ({piece,black,getPosition,getPossibleMoves}) => {\n    const [promotion,setPromotion]=useState<any>(null)\n    useEffect(()=>{\n    },[promotion])\n    const[,drop]=useDrop({\n        accept:'piece',\n        drop:(item)=>{\n            // @ts-ignore\n            const [FromPosition]=item.id.split('_')\n            handleMove(FromPosition,getPosition)\n        }\n    })\n\n    const closeTab=()=>{\n        setPromotion(null)\n    }\n    //function to declare weather the square is a potential move or not\n    const isSquareAPotentialMove=()=>{\n\n    }\n    useEffect(()=>{\n       // @ts-ignore\n        const subscribe=gameSubject.subscribe((value)=>value?.pendingPromotion&&pendingPromotion?.to===getPosition?setPromotion(pendingPromotion):setPromotion(null))\n        return ()=>subscribe.unsubscribe()\n    },[])\n    return (\n        <SquareContainer ref={drop} onClick={()=>getPossibleMoves(getPosition)} >\n            {promotion?<Promote promotion={promotion} closeTab={closeTab}/>:\n            <Square black={black}  position={getPosition} >\n                {piece&&<Piece piece={piece} position={getPosition}/>}\n            </Square>}\n            \n        </SquareContainer>\n    );\n};\n\nexport default BoardSquare;","/home/hari/WebstormProjects/chess/client/src/UI/Board/Square.tsx",[],"/home/hari/WebstormProjects/chess/client/src/UI/Board/Promote.tsx",[],"/home/hari/WebstormProjects/chess/client/src/game.js",["92"],"import * as Chess from 'chess.js'\nimport {BehaviorSubject} from \"rxjs\";\nimport {useState} from \"react\";\n\nconst chess=new Chess();\nexport const  gameSubject=new BehaviorSubject();\n\nexport const initGame=()=>{\n    const savedGame=localStorage.getItem('savedGame')\n    if(savedGame){\n        chess.load(savedGame)\n    }\n    updateGame()\n}\nexport function handleMove(from, to) {\n    const promotions = chess.moves({ verbose: true }).filter(m => m.promotion)\n    console.table(promotions)\n    if (promotions.some(p => `${p.from}:${p.to}` === `${from}:${to}`)) {\n        const pendingPromotion = { from, to, color: promotions[0].color }\n        updateGame(pendingPromotion)\n    }\n    const { pendingPromotion } = gameSubject.getValue()\n    if (!pendingPromotion) {\n        move(from, to)\n    }\n}\nexport const getPossibleMovesForASquare=(square)=>{\n    const moves=chess.moves({square})\n    console.log(moves)\n    return moves\n}\nexport function move(from,to,promotion){\n    let tempMove = { from, to }\n    if (promotion) {\n        tempMove.promotion = promotion\n    }\n    const legalMove = chess.move(tempMove)\n\n    if (legalMove) {\n        updateGame()\n    }\n\n\n}\nconst updateGame=(pendingPromotion)=>{\n    const isGameOver=chess.game_over()\n    const newGame={\n        board:chess.board(),\n        pendingPromotion,\n        isGameOver,\n        result:isGameOver?getGameResult():null,\n        turn:chess.turn()\n    }\n    localStorage.setItem('savedGame',chess.fen())\n    gameSubject.next(newGame)\n\n}\nconst getGameResult=()=>{\n    if(chess.in_checkmate()){\n        const winner=chess.turn()===\"w\"?\"BLACK\":\"WHITE\"\n        return `CHECKMATE- ${winner} won`\n    }else if(chess.in_draw()){\n        let reason='50 - MOVES -RULE'\n        if(chess.in_stalemate()){\n            reason=\"Stalemate\"\n        }\n        else if (chess.in_threefold_repetition()){\n            reason=\"REPETITION\"\n        }else if(chess.insufficient_material()){\n            reason=\"Insufficient Material\"\n        }\n        return `${reason} --DRAW`\n    }\n    else {\n        return `You're Something special`\n    }\n}\nexport const resetGame=()=>{\n    chess.reset()\n    updateGame()\n}",["93","94"],"/home/hari/WebstormProjects/chess/client/src/UI/Auth/Login/Login.tsx",["95","96","97","98","99"],"/home/hari/WebstormProjects/chess/client/src/UI/Auth/Input.tsx",[],"/home/hari/WebstormProjects/chess/client/src/UI/Auth/Login/Login.styles.tsx",["100"],"/home/hari/WebstormProjects/chess/client/src/UI/Auth/Login/LoginWrapper.tsx",[],"/home/hari/WebstormProjects/chess/client/src/Components/Styles/Flex.tsx",[],"/home/hari/WebstormProjects/chess/client/src/Components/Styles/ColorVarients.tsx",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":92,"column":7,"nodeType":"107","messageId":"108","endLine":92,"endColumn":28},{"ruleId":"105","severity":1,"message":"109","line":96,"column":7,"nodeType":"107","messageId":"108","endLine":96,"endColumn":29},{"ruleId":"105","severity":1,"message":"110","line":100,"column":7,"nodeType":"107","messageId":"108","endLine":100,"endColumn":29},{"ruleId":"105","severity":1,"message":"111","line":1,"column":16,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"105","severity":1,"message":"112","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":13},{"ruleId":"105","severity":1,"message":"113","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":13},{"ruleId":"105","severity":1,"message":"114","line":7,"column":21,"nodeType":"107","messageId":"108","endLine":7,"endColumn":47},{"ruleId":"105","severity":1,"message":"115","line":36,"column":11,"nodeType":"107","messageId":"108","endLine":36,"endColumn":33},{"ruleId":"116","severity":1,"message":"117","line":43,"column":7,"nodeType":"118","endLine":43,"endColumn":9,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":3,"column":9,"nodeType":"107","messageId":"108","endLine":3,"endColumn":17},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"122","line":6,"column":8,"nodeType":"107","messageId":"108","endLine":6,"endColumn":13},{"ruleId":"105","severity":1,"message":"123","line":8,"column":10,"nodeType":"107","messageId":"108","endLine":8,"endColumn":23},{"ruleId":"105","severity":1,"message":"124","line":17,"column":12,"nodeType":"107","messageId":"108","endLine":17,"endColumn":15},{"ruleId":"105","severity":1,"message":"125","line":18,"column":11,"nodeType":"107","messageId":"108","endLine":18,"endColumn":16},{"ruleId":"105","severity":1,"message":"126","line":19,"column":11,"nodeType":"107","messageId":"108","endLine":19,"endColumn":21},{"ruleId":"105","severity":1,"message":"127","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":21},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"@typescript-eslint/no-unused-vars","'GrayBoard' is assigned a value but never used.","Identifier","unusedVar","'BrownBoard' is assigned a value but never used.","'GreenBoard' is assigned a value but never used.","'useEffect' is defined but never used.","'White' is defined but never used.","'Black' is defined but never used.","'getPossibleMovesForASquare' is defined but never used.","'isSquareAPotentialMove' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPosition'. Either include it or remove the dependency array.","ArrayExpression",["130"],"no-unused-vars","'useState' is defined but never used.","'Queen' is defined but never used.","'ChessInstance' is defined but never used.","'fen' is assigned a value but never used.","'board' is assigned a value but never used.","'handleMove' is assigned a value but never used.","'colorVariants' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},"Update the dependencies array to be: [getPosition]",{"range":"133","text":"134"},[1344,1346],"[getPosition]"]