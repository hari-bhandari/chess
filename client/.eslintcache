[{"/home/hari/WebstormProjects/chess/client/src/index.tsx":"1","/home/hari/WebstormProjects/chess/client/src/reportWebVitals.ts":"2","/home/hari/WebstormProjects/chess/client/src/App.tsx":"3","/home/hari/WebstormProjects/chess/client/src/styles/theme.ts":"4","/home/hari/WebstormProjects/chess/client/src/styles/GlobalStyle.ts":"5","/home/hari/WebstormProjects/chess/client/src/UI/Board.tsx":"6","/home/hari/WebstormProjects/chess/client/src/game.js":"7","/home/hari/WebstormProjects/chess/client/src/BoardSquare.tsx":"8","/home/hari/WebstormProjects/chess/client/src/Square.tsx":"9","/home/hari/WebstormProjects/chess/client/src/Piece.tsx":"10","/home/hari/WebstormProjects/chess/client/src/Promote.tsx":"11"},{"size":1167,"mtime":1612458243237,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1612132907753,"results":"14","hashOfConfig":"13"},{"size":1058,"mtime":1612367522040,"results":"15","hashOfConfig":"13"},{"size":526,"mtime":1612284796552,"results":"16","hashOfConfig":"13"},{"size":172,"mtime":1612271853422,"results":"17","hashOfConfig":"13"},{"size":1189,"mtime":1612378663831,"results":"18","hashOfConfig":"13"},{"size":1334,"mtime":1612389478977,"results":"19","hashOfConfig":"13"},{"size":1469,"mtime":1612381763950,"results":"20","hashOfConfig":"13"},{"size":469,"mtime":1612287792581,"results":"21","hashOfConfig":"13"},{"size":1600,"mtime":1612396974182,"results":"22","hashOfConfig":"13"},{"size":1161,"mtime":1612383242067,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1sgv1ii",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/hari/WebstormProjects/chess/client/src/index.tsx",["53"],"/home/hari/WebstormProjects/chess/client/src/reportWebVitals.ts",[],["54","55"],"/home/hari/WebstormProjects/chess/client/src/App.tsx",[],"/home/hari/WebstormProjects/chess/client/src/styles/theme.ts",["56","57","58"],"interface chessColour{\n    white:string,\n    black:string\n}\nconst GrayBoard:chessColour={\n    white:'#D9D9D9',\n    black:'#929292'\n}\nconst BrownBoard:chessColour={\n    white:'#EBECD0',\n    black:'#B68860'\n}\nconst GreenBoard:chessColour={\n    white:'#EBECD0',\n    black:'#779556'\n}\nconst WoodBoard:chessColour={\n    white:'#BA9C78',\n    black:'#725238'\n}\n\nconst themeCommon ={\n    colors: {\n        light: '#ffffff',\n        navbar: '#25315b',\n        hamButton: '#ffffff',\n    },\n    ...WoodBoard\n\n}\nexport default themeCommon","/home/hari/WebstormProjects/chess/client/src/styles/GlobalStyle.ts",[],"/home/hari/WebstormProjects/chess/client/src/UI/Board.tsx",["59"],"import React, {useEffect} from 'react';\nimport styled from \"styled-components\";\nimport BoardSquare from \"../BoardSquare\";\ninterface propsInterface {\n    board:[]|null\n}\nconst BoardContainer=styled.div`\n    width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n`\nconst Square=styled.div`\n    width: 12.5%;\n    height: 12.5%;\n`\n\nconst Board:React.FC<propsInterface> = ({board}) => {\n    function getXYPosition(i:number) {\n        const x = i% 8\n        const y = Math.abs(Math.floor(i / 8) - 7)\n        return { x, y }\n    }\n\n    function isBlack(i:number) {\n        const { x, y } = getXYPosition(i)\n        return (x + y) % 2 === 1\n    }\n    function getPosition(i:number) {\n        const { x, y } = getXYPosition(i)\n        const letter = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'][\n            x\n            ]\n        return `${letter}${y + 1}`\n    }\n    return (\n        <BoardContainer>\n            {board?.flat().map((piece,i:number)=><Square key={i}>\n                <BoardSquare\n                piece={piece}\n                black={isBlack(i)}\n                getPosition={getPosition(i)}\n            /></Square>)}\n        </BoardContainer>\n    );\n};\n\nexport default Board;","/home/hari/WebstormProjects/chess/client/src/game.js",["60","61","62"],"import * as Chess from 'chess.js'\nimport {BehaviorSubject} from \"rxjs\";\nlet promotion = 'rnb2bnr/pppPkppp/8/4p3/7q/8/PPPP1PPP/RNBQKBNR w KQ - 1 5'\nlet staleMate = \"4k3/4P3/4K3/8/8/8/8/8 b - - 0 78\"\nlet checkMate = 'rnblkbnr/pppplppp/8/4p3/5PPq/8/PPPPP2P/RNBQKBNR w KQkq - 1 3'\nlet insuficcientMaterial = 'k7/8/n7/8/8/8/8/7K b - - 0 1'\n\nconst chess=new Chess(promotion);\nexport const gameSubject=new BehaviorSubject({\n    board:chess.board()\n});\n\nexport const initGame=()=>{\n    updateGame()\n}\nexport function handleMove(from, to) {\n    const promotions = chess.moves({ verbose: true }).filter(m => m.promotion)\n    console.table(promotions)\n    if (promotions.some(p => `${p.from}:${p.to}` === `${from}:${to}`)) {\n        const pendingPromotion = { from, to, color: promotions[0].color }\n        updateGame(pendingPromotion)\n    }\n    const { pendingPromotion } = gameSubject.getValue()\n\n    if (!pendingPromotion) {\n        move(from, to)\n    }\n}\nexport function move(from,to,promotion){\n    let tempMove = { from, to }\n    if (promotion) {\n        tempMove.promotion = promotion\n    }\n    const legalMove = chess.move(tempMove)\n\n    if (legalMove) {\n        updateGame()\n    }\n\n\n}\nconst updateGame=(pendingPromotion)=>{\n    const newGame={\n        board:chess.board(),\n        pendingPromotion\n    }\n    gameSubject.next(newGame)\n\n}",["63","64"],"/home/hari/WebstormProjects/chess/client/src/BoardSquare.tsx",["65"],"import React, {useEffect, useState} from 'react';\nimport Square from \"./Square\";\nimport Piece from \"./Piece\";\nimport styled from \"styled-components\";\nimport {useDrop} from \"react-dnd\";\nimport {handleMove} from './game'\nimport {gameSubject} from \"./game\";\nimport Promote from \"./Promote\";\ninterface props{\n    piece:any;\n    black:boolean,\n    getPosition:string\n}\nconst SquareContainer=styled.div`\n  width: 100%;\n  height: 100%;\n`\nconst BoardSquare:React.FC<props> = ({piece,black,getPosition}) => {\n    const [promotion,setPromotion]=useState<any>(null)\n    useEffect(()=>{\n    },[promotion])\n    const[,drop]=useDrop({\n        accept:'piece',\n        drop:(item)=>{\n            // @ts-ignore\n            const [FromPosition]=item.id.split('_')\n            handleMove(FromPosition,getPosition)\n        }\n    })\n    const closeTab=()=>{\n        setPromotion(null)\n    }\n    useEffect(()=>{\n       // @ts-ignore\n        const subscribe=gameSubject.subscribe(({pendingPromotion})=>pendingPromotion&&pendingPromotion.to===getPosition?setPromotion(pendingPromotion):setPromotion(null))\n        return ()=>subscribe.unsubscribe()\n    },[])\n    return (\n        <SquareContainer ref={drop}>\n            {promotion?<Promote promotion={promotion} closeTab={closeTab}/>:\n            <Square black={black}>\n                {piece&&<Piece piece={piece} position={getPosition}/>}\n            </Square>}\n            \n        </SquareContainer>\n    );\n};\n\nexport default BoardSquare;","/home/hari/WebstormProjects/chess/client/src/Square.tsx",[],"/home/hari/WebstormProjects/chess/client/src/Piece.tsx",["66","67"],"import React from 'react';\nimport {useDrag, DragPreviewImage} from 'react-dnd'\nimport styled from \"styled-components\";\n// @ts-ignore\nimport { usePreview } from 'react-dnd-preview'\n\ninterface props {\n    piece: PieceInterface,\n    position?:string,\n    promote?:boolean,\n    onClickPromotion?:()=>void\n}\n\ninterface PieceInterface {\n    type: string,\n    color: string\n}\n\nconst PieceContainer = styled.div<{isDragging?:boolean}>`\n  width: 100%;\n  height: 100%;\n  opacity: ${props => props.isDragging?0:1};\n  &:hover {\n    cursor: move;\n  }\n\n  display: flex;\n  justify-content: center;\n  justify-items: center;\n\n  img {\n    max-width: 100%;\n    max-height: 100%;\n  }\n`\nconst Piece: React.FC<props> = ({piece: {type, color},position,promote,onClickPromotion}) => {\n\n    const [{ isDragging }, drag, preview] = useDrag({\n        item: {\n            type: 'piece',\n            id: `${position}_${type}_${color}`,\n        },\n        collect: (monitor) => {\n            return { isDragging: !!monitor.isDragging() }\n        },\n    })\n    const UsePreview=usePreview(preview)\n    const path = require(`./assets/${color.toLowerCase()}${type.toUpperCase()}.svg`).default\n\n    if(promote){\n        return (\n            <>\n                <PieceContainer >\n                    <img src={path} alt={type}/>\n                </PieceContainer>\n            </>\n        )\n    }\n\n    return (\n        <>\n            {/*<UsePreview />*/}\n            <PieceContainer ref={drag} isDragging={isDragging}>\n                <img src={path} alt={type}/>\n            </PieceContainer>\n        </>\n    );\n};\n\nexport default Piece;","/home/hari/WebstormProjects/chess/client/src/Promote.tsx",[],{"ruleId":"68","severity":1,"message":"69","line":8,"column":8,"nodeType":"70","messageId":"71","endLine":8,"endColumn":20},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"68","severity":1,"message":"76","line":5,"column":7,"nodeType":"70","messageId":"71","endLine":5,"endColumn":28},{"ruleId":"68","severity":1,"message":"77","line":9,"column":7,"nodeType":"70","messageId":"71","endLine":9,"endColumn":29},{"ruleId":"68","severity":1,"message":"78","line":13,"column":7,"nodeType":"70","messageId":"71","endLine":13,"endColumn":29},{"ruleId":"68","severity":1,"message":"79","line":1,"column":16,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"80","severity":1,"message":"81","line":4,"column":5,"nodeType":"70","messageId":"71","endLine":4,"endColumn":14},{"ruleId":"80","severity":1,"message":"82","line":5,"column":5,"nodeType":"70","messageId":"71","endLine":5,"endColumn":14},{"ruleId":"80","severity":1,"message":"83","line":6,"column":5,"nodeType":"70","messageId":"71","endLine":6,"endColumn":25},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"84","severity":1,"message":"85","line":37,"column":7,"nodeType":"86","endLine":37,"endColumn":9,"suggestions":"87"},{"ruleId":"68","severity":1,"message":"88","line":2,"column":18,"nodeType":"70","messageId":"71","endLine":2,"endColumn":34},{"ruleId":"68","severity":1,"message":"89","line":47,"column":11,"nodeType":"70","messageId":"71","endLine":47,"endColumn":21},"@typescript-eslint/no-unused-vars","'MultiBackend' is defined but never used.","Identifier","unusedVar","no-native-reassign",["90"],"no-negated-in-lhs",["91"],"'GrayBoard' is assigned a value but never used.","'BrownBoard' is assigned a value but never used.","'GreenBoard' is assigned a value but never used.","'useEffect' is defined but never used.","no-unused-vars","'staleMate' is assigned a value but never used.","'checkMate' is assigned a value but never used.","'insuficcientMaterial' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPosition'. Either include it or remove the dependency array.","ArrayExpression",["92"],"'DragPreviewImage' is defined but never used.","'UsePreview' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [getPosition]",{"range":"95","text":"96"},[1131,1133],"[getPosition]"]